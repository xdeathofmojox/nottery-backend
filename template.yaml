AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  nottery-backend

  Sample SAM Template for nottery-backend
  
Globals:
  Function:
    Timeout: 3

Parameters:
  Stage:
    Type: String
    Default: dev

Resources:
  NotteryApiCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Sub api-${Stage}.nottery.frozen-phoenix.com
      ValidationMethod: DNS

  NotteryApiDeployment:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Domain:
        DomainName: !Sub api-${Stage}.nottery.frozen-phoenix.com
        CertificateArn: !Ref NotteryApiCertificate
        Route53:
          HostedZoneName: "frozen-phoenix.com."

  PostWinningNumbersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: winning-numbers/
      Handler: app.post
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref WinningNumbersTable
      Environment:
        Variables:
          TABLE_NAME: !Ref WinningNumbersTable
          REGION: !Sub ${AWS::Region}
      Events:
        WinningNumbers:
          Type: Api
          Properties:
            Path: /winningNumbers
            Method: post
            RestApiId: !Ref NotteryApiDeployment
        DailyScheduledNumbersEvent:
          Type: ScheduleV2
          Properties:
            Name: !Sub DailyScheduledNumbersEvent-${Stage}
            ScheduleExpression: "cron(00 12 * * ? *)"
            ScheduleExpressionTimezone: UTC

  GetWinningNumbersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: winning-numbers/
      Handler: app.get
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref WinningNumbersTable
      Environment:
        Variables:
          TABLE_NAME: !Ref WinningNumbersTable
          REGION: !Sub ${AWS::Region}
      Events:
        TodaysWinningNumber:
          Type: Api
          Properties:
            Path: /winningNumbers
            Method: get
            RestApiId: !Ref NotteryApiDeployment
        SpecificDatesWinningNumber:
          Type: Api
          Properties:
            Path: /winningNumbers/{date}
            Method: get
            RestApiId: !Ref NotteryApiDeployment

  WinningNumbersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub ${AWS::StackName}-WinningNumbers

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Hello World function"
    Value: !Sub "https://${NotteryApiDeployment}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/hello/"
  PostWinningNumbersFunction:
    Description: "PostWinningNumbers Lambda Function ARN"
    Value: !GetAtt PostWinningNumbersFunction.Arn
  GetWinningNumbersFunction:
    Description: "GetWinningNumbers Lambda Function ARN"
    Value: !GetAtt GetWinningNumbersFunction.Arn
